/* eslint-disable no-console */
import { readFileSync, writeFileSync, mkdirSync, existsSync } from 'node:fs';
import { join, resolve } from 'node:path';
import { fileURLToPath } from 'node:url';

// ---------- CONFIG ----------
const DIST_DIR = resolve(process.cwd(), 'dist');
const ROUTES_JSON = resolve(process.cwd(), 'scripts', 'routes.json');
const INDEX_FILE = join(DIST_DIR, 'index.html');
// ----------------------------

function loadRoutes() {
  try {
    const json = readFileSync(ROUTES_JSON, 'utf8');
    return JSON.parse(json);
  } catch (err) {
    console.error('‚ùå Failed to read routes.json generated by generate-sitemap:', err);
    process.exit(1);
  }
}

function copyIndexToRoute(route) {
  // GitHub Pages expects real files. For route "/features/project-management" we create
  //   dist/features/project-management/index.html
  const dir = route === '/' ? DIST_DIR : join(DIST_DIR, route.replace(/^\//, ''));
  if (!existsSync(dir)) {
    mkdirSync(dir, { recursive: true });
  }
  const target = join(dir, 'index.html');
  writeFileSync(target, readFileSync(INDEX_FILE));
  console.log(`üìë Stub created: ${target}`);
}

function main() {
  if (!existsSync(INDEX_FILE)) {
    console.error('‚ùå Build first (vite build) so dist/index.html exists.');
    process.exit(1);
  }

  const routes = loadRoutes();
  routes.forEach(copyIndexToRoute);
  console.log(`‚úÖ Prerendered ${routes.length} SPA stubs for GitHub Pages.`);
}

main(); 