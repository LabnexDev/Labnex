import{j as e}from"./markdown-core-J3SG-zFE.js";import{r as n}from"./router-W3ruk9z3.js";import{S as t}from"./SectionWrapper-Dzbymww3.js";import"./react-core-eVk5PToZ.js";const a=()=>{const[a,s]=n.useState("cli"),[r,i]=n.useState(!1),o=[{id:"cli",label:"CLI Commands",language:"bash",description:"Install and use our CLI tool for automated testing",summary:'# Quick CLI Overview\n$ npm install -g @labnex/cli\n$ labnex auth login\n$ labnex projects create --name "My App" --code MYAPP\n$ labnex run --project MYAPP --ai-optimize\n\n‚úì Authenticated successfully\n‚úì Project created: MYAPP  \nüöÄ Running 5 tests with AI optimization\n‚úÖ All tests passed in 1.8s',content:'# Install Labnex CLI\n$ npm install -g @labnex/cli\n\n# Authenticate with Labnex\n$ labnex auth login\nEmail: developer@company.com\n‚úì Successfully authenticated with Labnex\n‚úì Configuration saved to ~/.labnex/config.json\n\n# Create a new project\n$ labnex projects create --name "My Application" --code MYAPP\n‚úì Project created successfully\n‚úì Project code: MYAPP\n‚úì Ready for test cases\n\n# List your projects\n$ labnex projects list\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ Project     ‚îÇ Name                 ‚îÇ Tests      ‚îÇ Status      ‚îÇ\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n‚îÇ MYAPP       ‚îÇ My Application       ‚îÇ 5 tests    ‚îÇ ‚úÖ Active  ‚îÇ\n‚îÇ DEMO        ‚îÇ Demo Project         ‚îÇ 3 tests    ‚îÇ ‚úÖ Active  ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\n# Run tests with AI optimization\n$ labnex run --project MYAPP --ai-optimize --parallel 2\n\nüöÄ Labnex CLI v1.2.0\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n‚úì Project: MYAPP (My Application)\n‚úì AI optimization enabled\n‚úì Parallel execution: 2 workers\n‚úì Environment: staging\n\nüß† AI Analysis:\n   ‚Ä¢ 5 test cases found\n   ‚Ä¢ Prioritizing critical path tests\n   ‚Ä¢ Estimated time: 2 minutes\n\nüèÉ Executing tests...\nLogin Tests             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100% (2/2)   ‚úÖ 0.6s\nForm Validation         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100% (3/3)   ‚úÖ 1.2s\n\nüìä Results Summary:\n   ‚Ä¢ Passed: 5/5 tests ‚úÖ\n   ‚Ä¢ Duration: 1.8 seconds\n   ‚Ä¢ Success Rate: 100%\n\nüîó View results: https://app.labnex.io/projects/MYAPP/runs/abc123'},{id:"ai-generate",label:"AI Test Generation",language:"bash",description:"Generate test cases with AI assistance",summary:'# AI Test Generation\n$ labnex ai generate --description "Test user login form"\n\nüìù Generated: User Login Form Test\n‚úì 4 test steps created\n‚úì 3 validation cases added\n‚úì Saved as TC-MYAPP-001',content:'# Generate test case with AI\n$ labnex ai generate --description "Test user login form validation"\n\nüß† AI Test Generator\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n‚úì Analyzing requirements...\n‚úì Generating test steps...\n‚úì Creating assertions...\n‚úì Adding edge cases...\n\nüìù Generated Test Case:\n\nTitle: User Login Form Validation\nPriority: HIGH\nCategory: Authentication\n\nTest Steps:\n1. Navigate to login page (/login)\n2. Verify form fields are present\n3. Enter valid credentials:\n   - Email: user@example.com\n   - Password: ValidPass123!\n4. Click "Login" button\n5. Verify successful login redirect\n\nValidation Tests:\n‚Ä¢ Empty email field ‚Üí "Email is required"\n‚Ä¢ Invalid email format ‚Üí "Enter valid email"\n‚Ä¢ Empty password ‚Üí "Password is required"\n‚Ä¢ Invalid credentials ‚Üí "Invalid login"\n\nExpected Results:\n‚úì User successfully logged in\n‚úì Redirected to dashboard\n‚úì All validation errors handled\n\n# Save to project\n$ labnex ai generate --project MYAPP --save\n‚úì Test case saved to project MYAPP\n‚úì Test ID: TC-MYAPP-001'},{id:"analysis",label:"Failure Analysis",language:"bash",description:"AI-powered test failure analysis and suggestions",summary:'# AI Failure Analysis  \n$ labnex ai analyze run123 failure456\n\n‚ùå Test: "Login Form" FAILED\nüß† AI Analysis: Button selector changed (85% confidence)\nüí° Suggested fix: Update to [data-testid="login-btn"]\n‚ú® Confidence Score: 85%',content:'# Analyze test failure with AI\n$ labnex ai analyze run123 failure456\n\nüîç AI Failure Analysis\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\nTest: "Login Form Validation"\nStatus: ‚ùå FAILED\nDuration: 3.2s\nEnvironment: staging\n\nüìã Failure Details:\n   Step 4: "Click login button"\n   Error: Element not found: #login-button\n   Screenshot: Available in test results\n\nüß† AI Analysis:\n   ‚Ä¢ Button selector likely changed (85% confidence)\n   ‚Ä¢ Common pattern in recent updates\n   ‚Ä¢ Similar failure in 1 other test\n\nüí° Suggested Solutions:\n1. Update selector to: [data-testid="login-btn"]\n2. Add wait condition for form loading\n3. Check if button is disabled initially\n\nüîÑ Related Issues:\n   ‚Ä¢ TC-MYAPP-002: Similar selector issue\n\nüìä Pattern Analysis:\n   ‚Ä¢ 60% of failures due to selector changes\n   ‚Ä¢ 30% due to timing issues\n   ‚Ä¢ 10% due to test data problems\n\nüõ†Ô∏è Quick Fix Available:\n   Run: labnex ai fix --test-id TC-MYAPP-001 --apply\n   \n‚ú® Confidence Score: 85%'},{id:"config",label:"Test Configuration",language:"yaml",description:"Project configuration for test automation",summary:'# labnex.yml Configuration\nname: "My Application Tests"\nproject_code: "MYAPP"\n\nai_optimization:\n  enabled: true\n  smart_selection: true\n  \nenvironments:\n  staging:\n    parallel_workers: 2\n  production:\n    parallel_workers: 4',content:'# labnex.yml - Project Configuration\nname: "My Application Tests"\nversion: "1.0.0"\nproject_code: "MYAPP"\n\n# AI-Powered Features\nai_optimization:\n  enabled: true\n  smart_selection: true\n  failure_prediction: true\n  auto_healing: false\n\n# Environment Configuration\nenvironments:\n  staging:\n    url: "https://staging.myapp.com"\n    parallel_workers: 2\n    timeout: 30000\n    \n  production:\n    url: "https://myapp.com"\n    parallel_workers: 4\n    timeout: 45000\n    smoke_tests_only: true\n\n# Test Suite Organization\ntest_suites:\n  authentication:\n    priority: critical\n    tests: ["login", "register", "password_reset"]\n    dependencies: ["database"]\n    \n  forms:\n    priority: high\n    tests: ["contact_form", "feedback", "validation"]\n    dependencies: ["frontend"]\n\n# Real-time Monitoring\nmonitoring:\n  websocket_updates: true\n  live_screenshots: true\n  performance_tracking: true\n\n# Integrations\nnotifications:\n  slack:\n    webhook: ${SLACK_WEBHOOK_URL}\n    channels: ["#dev-team"]\n    on_failure: true\n    \n  email:\n    recipients: ["team@myapp.com"]\n    on_critical_failure: true\n\n# Reporting\nreporting:\n  formats: ["html", "json"]\n  include_screenshots: true\n  include_logs: true\n  retention_days: 30\n\n# CI/CD Integration\nci_integration:\n  github_actions: true\n  gitlab_ci: true'},{id:"sdk",label:"SDK Integration",language:"javascript",description:"Programmatic integration with your codebase",summary:"// Labnex SDK Integration\nimport { LabnexClient } from '@labnex/cli';\n\nconst client = new LabnexClient({\n  apiKey: process.env.LABNEX_API_KEY,\n  projectCode: 'MYAPP'\n});\n\n// Run tests programmatically\nconst results = await client.run({\n  project: 'MYAPP',\n  aiOptimization: true,\n  parallel: 2\n});",content:"import { LabnexClient } from '@labnex/cli';\n\n// Initialize Labnex client\nconst labnex = new LabnexClient({\n  apiKey: process.env.LABNEX_API_KEY,\n  projectCode: 'MYAPP',\n  environment: 'staging'\n});\n\n// Programmatic test execution\nasync function runAutomatedTests() {\n  try {\n    // Start AI-optimized test run\n    const testRun = await labnex.run({\n      project: 'MYAPP',\n      suites: ['authentication', 'forms'],\n      aiOptimization: true,\n      parallel: 2,\n      environment: 'staging'\n    });\n\n    console.log(`Test run started: ${testRun.id}`);\n\n    // Real-time progress monitoring\n    testRun.on('progress', (data) => {\n      console.log(`Progress: ${data.completed}/${data.total} tests`);\n    });\n\n    testRun.on('test_completed', (result) => {\n      if (result.status === 'failed') {\n        console.error(`‚ùå ${result.name}: ${result.error}`);\n      } else {\n        console.log(`‚úÖ ${result.name}: ${result.duration}ms`);\n      }\n    });\n\n    // Wait for completion\n    const results = await testRun.waitForCompletion();\n    \n    return {\n      success: results.stats.failed === 0,\n      stats: results.stats,\n      reportUrl: results.reportUrl,\n      duration: results.duration\n    };\n\n  } catch (error) {\n    console.error('Test execution failed:', error);\n    throw error;\n  }\n}\n\n// AI-powered test generation\nasync function generateTestWithAI() {\n  const testCase = await labnex.ai.generateTest({\n    description: \"Test contact form submission\",\n    category: \"forms\",\n    priority: \"medium\",\n    projectCode: \"MYAPP\"\n  });\n\n  console.log('Generated test case:', testCase);\n  \n  // Save to project\n  await labnex.testCases.create(testCase);\n  \n  return testCase;\n}\n\n// CI/CD Pipeline Integration\nasync function cicdIntegration() {\n  const branch = process.env.GIT_BRANCH || 'main';\n  const commit = process.env.GIT_COMMIT || 'latest';\n  \n  // Run tests with metadata\n  const testRun = await labnex.run({\n    project: 'MYAPP',\n    metadata: {\n      branch,\n      commit,\n      buildNumber: process.env.BUILD_NUMBER\n    },\n    aiOptimization: true,\n    analyzeCodeChanges: true\n  });\n\n  // Set exit code based on results\n  const results = await testRun.waitForCompletion();\n  process.exit(results.stats.failed > 0 ? 1 : 0);\n}\n\n// Export for use in CI/CD\nmodule.exports = {\n  runAutomatedTests,\n  generateTestWithAI,\n  cicdIntegration\n};"}],l=e=>{switch(e){case"json":return"{ }";case"yaml":return"‚öôÔ∏è";case"bash":return"$";case"javascript":return"JS";default:return"üìÑ"}},c=o.find(e=>e.id===a);return e.jsx(t,{badge:"Developer Experience",title:e.jsxs(e.Fragment,{children:["Built for"," ",e.jsx("span",{className:"text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-blue-400",children:"developers"})]}),subtitle:"Experience the power of Labnex through our CLI automation tool, AI-powered test generation, and seamless CI/CD integration.",backgroundType:"split",children:e.jsxs("div",{className:"max-w-6xl mx-auto",children:[e.jsx("div",{className:"bg-white/5 backdrop-blur-md border border-white/10 rounded-t-2xl p-1 flex gap-1 overflow-x-auto",children:o.map(n=>e.jsxs("button",{onClick:()=>s(n.id),className:"flex items-center gap-3 px-4 py-3 rounded-xl font-medium transition-all duration-300 whitespace-nowrap "+(a===n.id?"bg-white/10 text-white shadow-lg":"text-slate-400 hover:text-slate-300 hover:bg-white/5"),children:[e.jsx("span",{className:"text-lg",children:l(n.language)}),e.jsx("span",{children:n.label})]},n.id))}),e.jsxs("div",{className:"bg-slate-900/90 backdrop-blur-md border border-white/10 border-t-0 rounded-b-2xl overflow-hidden",children:[e.jsx("div",{className:"px-6 py-4 bg-white/5 border-b border-white/10",children:e.jsx("p",{className:"text-slate-300 text-sm",children:c?.description})}),e.jsxs("div",{className:"p-6 overflow-x-auto",children:[e.jsx("div",{className:"flex justify-between items-center mb-4",children:e.jsx("button",{onClick:()=>i(!r),className:"flex items-center gap-2 px-3 py-1 bg-white/10 hover:bg-white/15 rounded-lg text-slate-300 hover:text-white text-sm transition-colors duration-200",children:r?e.jsxs(e.Fragment,{children:[e.jsx("svg",{className:"w-4 h-4",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:e.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M5 15l7-7 7 7"})}),"Show Summary"]}):e.jsxs(e.Fragment,{children:[e.jsx("svg",{className:"w-4 h-4",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:e.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M19 9l-7 7-7-7"})}),"Show Full Details"]})})}),e.jsx("div",{className:"font-mono text-sm leading-relaxed",children:c&&(d=r?c.content:c.summary||c.content,p=c.language,d.split("\n").map((n,t)=>{let a=n;return"json"===p?a=n.replace(/"([^"]+)":/g,'<span class="text-blue-400">"$1"</span>:').replace(/:\s*"([^"]+)"/g,': <span class="text-green-400">"$1"</span>').replace(/:\s*(\d+)/g,': <span class="text-orange-400">$1</span>').replace(/(true|false|null)/g,'<span class="text-purple-400">$1</span>'):"yaml"===p?a=n.replace(/^(\s*)([\w_]+):/g,'$1<span class="text-blue-400">$2</span>:').replace(/:\s*([^#\n]+)/g,': <span class="text-green-400">$1</span>').replace(/#.*/g,'<span class="text-slate-500">$&</span>'):"bash"===p?a=n.replace(/^\$\s/,'<span class="text-emerald-400">$ </span>').replace(/‚úì/g,'<span class="text-green-400">‚úì</span>').replace(/‚ùå/g,'<span class="text-red-400">‚ùå</span>').replace(/‚úÖ/g,'<span class="text-green-400">‚úÖ</span>').replace(/üöÄ|üîç|üèÉ|üìä|üìà|üîó/g,'<span class="text-yellow-400">$&</span>'):"javascript"===p&&(a=n.replace(/(const|let|var|function|async|await|import|from|export)/g,'<span class="text-purple-400">$1</span>').replace(/('.*?'|".*?")/g,'<span class="text-green-400">$1</span>').replace(/\/\/.*$/g,'<span class="text-slate-500">$&</span>').replace(/(\d+)/g,'<span class="text-orange-400">$1</span>')),e.jsxs("div",{className:"flex",children:[e.jsx("span",{className:"text-slate-500 text-right w-12 mr-4 select-none",children:t+1}),e.jsx("span",{dangerouslySetInnerHTML:{__html:a}})]},t)}))})]})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-6 mt-12",children:[{icon:"üöÄ",title:"CLI Automation",description:"Command-line interface for automated testing with AI optimization and parallel execution"},{icon:"üß†",title:"AI Test Generation",description:"Generate test cases with AI, analyze failures, and get intelligent suggestions"},{icon:"üîÑ",title:"CI/CD Integration",description:"Seamless integration with GitHub Actions, GitLab CI, and your existing workflows"}].map((n,t)=>e.jsxs("div",{className:"bg-white/5 backdrop-blur-md border border-white/10 rounded-xl p-6 text-center hover:bg-white/10 transition-colors duration-300",children:[e.jsx("div",{className:"text-4xl mb-4",children:n.icon}),e.jsx("h3",{className:"text-lg font-bold text-white mb-2",children:n.title}),e.jsx("p",{className:"text-slate-400 leading-relaxed",children:n.description})]},t))}),e.jsx("div",{className:"mt-16 text-center",children:e.jsxs("div",{className:"bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl p-8 max-w-2xl mx-auto",children:[e.jsx("h3",{className:"text-2xl font-bold text-white mb-4",children:"Ready to automate your testing?"}),e.jsx("p",{className:"text-slate-400 mb-6 leading-relaxed",children:"Install the Labnex CLI and start running AI-powered tests in minutes."}),e.jsxs("div",{className:"flex flex-col sm:flex-row gap-4 justify-center",children:[e.jsx("a",{href:"https://www.npmjs.com/package/@labnex/cli",target:"_blank",rel:"noopener noreferrer",className:"px-6 py-3 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-500 hover:to-blue-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-[1.02] text-center",children:"Install CLI Tool"}),e.jsx("a",{href:"https://github.com/LabnexDev/Labnex/tree/main/packages/cli",target:"_blank",rel:"noopener noreferrer",className:"px-6 py-3 bg-white/10 backdrop-blur-md border border-white/20 text-slate-200 hover:bg-white/15 hover:text-white rounded-xl font-semibold transition-all duration-300 hover:scale-[1.02] text-center",children:"View CLI Docs"})]}),e.jsx("div",{className:"mt-6 p-4 bg-slate-800/40 rounded-xl border border-slate-600/30",children:e.jsx("code",{className:"text-slate-300 text-sm font-mono",children:"npm install -g @labnex/cli && labnex auth login"})})]})})]})});var d,p};export{a as default};
