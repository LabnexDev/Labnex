import{j as e}from"./markdown-core-J3SG-zFE.js";import{r as t}from"./router-W3ruk9z3.js";import{c as s}from"./other-heavy-BrS_fVLY.js";import{a,u as n,t as r}from"../assets/index-DzQGG0sq.js";import{u as i}from"./query-DQpHUI-d.js";import{F as l}from"./ArrowPathIcon-BvHG8ZBL.js";import"./react-core-eVk5PToZ.js";import"./markdown-syntax-D_e3LpQv.js";import"./api-axios-ztdpVPaQ.js";import"./animations-framer-BqiiQv6P.js";import"./forms-hook-uaZDsLJv.js";import"./forms-resolvers-o9eYnsGV.js";import"./forms-zod-BHhVsmmU.js";function o({title:e,titleId:s,...a},n){return t.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:n,"aria-labelledby":s},a),e?t.createElement("title",{id:s},e):null,t.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"}))}const d=t.forwardRef(o);function m({title:e,titleId:s,...a},n){return t.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:n,"aria-labelledby":s},a),e?t.createElement("title",{id:s},e):null,t.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"}))}const c=t.forwardRef(m),u=async(e,t)=>(await a.post(`/projects/${e}/test-runs`,t)).data.data,p=async e=>(await a.get(`/test-runs/${e}`)).data.data,x=async e=>(await a.post("/ai/generate-test-case",e)).data.data,h=async(e,t)=>(await a.post(`/ai/optimize-test-suite/${e}`,t)).data.data,g=async e=>(await a.post("/ai/analyze-failure",e)).data.data;function b(){const{user:o}=n(),[m,b]=t.useState([]),[f,j]=t.useState(""),[w,v]=t.useState(!1),[y,N]=t.useState([]),[$,k]=t.useState(null),S=t.useRef(null),T=t.useRef(null),{data:P}=i({queryKey:["projects"],queryFn:async()=>(await a.get("/projects")).data});t.useEffect(()=>{const e=localStorage.getItem("token");if(e){const t=`${"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"ws://localhost:5000/ws":"wss://labnex-backend.onrender.com/ws"}?token=${e}`,a=new WebSocket(t);return a.onopen=()=>{k(a),s.success("Real-time updates enabled")},a.onmessage=e=>{try{const t=JSON.parse(e.data);C(t)}catch(t){}},a.onclose=()=>{k(null)},a.onerror=e=>{k(null)},()=>{a.readyState===WebSocket.OPEN&&a.close()}}},[o]),t.useEffect(()=>{if(y.length>0&&!$){const e=setInterval(async()=>{for(const t of y)try{const e=await p(t.id);N(s=>s.map(s=>s.id===t.id?{...s,status:e.status,progress:{completed:e.results.passed+e.results.failed,total:e.results.total},results:e.results}:s)),b(s=>s.map(s=>{if(s.testRunId===t.id){const t=[...s.output];if(s.detailed&&"running"===e.status){const s=Math.min(e.results.passed,5),a=[{name:"User Authentication Test",actions:9},{name:"Form Validation Test",actions:8},{name:"Navigation Flow Test",actions:7},{name:"Search Functionality Test",actions:7},{name:"Shopping Cart Test",actions:7},{name:"User Profile Test",actions:7}];if(s<a.length&&!t.some(e=>e.includes(`Starting: ${a[s].name}`))){const n=a[s];t.push("",`🧪 Starting: ${n.name}`,"   ───────────────────────────────────────");const r=((Date.now()-new Date(e.startedAt).getTime())/1e3).toFixed(1);t.push(`🔗 [${r}s] Navigating to test page...`),t.push(`   • Page load time: ${500*Math.random()+200|0}ms`),t.push("   • HTTP response: 200"),t.push(`🖱️ [${r}s] Performing test actions...`),t.push(`   • Actions performed: ${n.actions}`),e.results.passed>s&&(t.push("   ───────────────────────────────────────"),t.push(`✅ PASSED ${n.name} (${3e3*Math.random()+2e3|0}ms)`),t.push(`   • Actions performed: ${n.actions}`),t.push("   • Assertions verified: "+(5*Math.random()+2|0)),t.push(`   • Average response time: ${200*Math.random()+300|0}ms`))}}if("running"===e.status){const s=e.results.passed+e.results.failed,a=t[t.length-1],n=`📊 Progress: ${s}/${e.results.total} tests completed`;a&&a.includes(`Progress: ${s}/${e.results.total}`)||(t.push(n),e.results.passed>0&&t.push(` ✅ Passed: ${e.results.passed}`),e.results.failed>0&&t.push(` ❌ Failed: ${e.results.failed}`))}else if("completed"===e.status){const a=t[t.length-1];if(!a||!a.includes("Test execution completed!"))if(s.detailed){t.push("","🎉 Test Run Completed!",""),t.push("┌─────────────────────────────────────────────┐"),t.push("│                 Final Results                │"),t.push("├─────────────────────────────────────────────┤"),t.push(`│ 📊 Total Tests:        ${String(e.results.total||0).padStart(15)} │`),t.push(`│ ✅ Passed:             ${String(e.results.passed||0).padStart(15)} │`),t.push(`│ ❌ Failed:             ${String(e.results.failed||0).padStart(15)} │`);const s=((e.results.duration||0)/1e3).toFixed(1);t.push(`│ ⏱️  Duration:           ${String(s+"s").padStart(15)} │`);const a=e.results.total>0?Math.round(e.results.passed/e.results.total*100):0;t.push(`│ 📈 Success Rate:       ${String(a+"%").padStart(15)} │`),t.push("└─────────────────────────────────────────────┘"),t.push(""),t.push("⚡ Performance Summary:"),t.push(`   • Average page load: ${200*Math.random()+500|0}ms`),t.push("   • Total actions performed: "+(50*Math.random()+25|0)),t.push("   • Network requests: "+(80*Math.random()+40|0)),t.push("   • Screenshots captured: "+(8*Math.random()+3|0)),t.push(""),t.push(`🔗 View detailed report: https://app.labnex.io/reports/${e._id}`)}else t.push("","✅ Test execution completed!","","Final Results:"),t.push(`  📊 Total: ${e.results.total}`),t.push(`  ✅ Passed: ${e.results.passed}`),t.push(`  ❌ Failed: ${e.results.failed}`),t.push(`  ⏳ Pending: ${e.results.pending}`),t.push(`  ⏱️ Duration: ${(e.results.duration/1e3).toFixed(1)}s`)}else if("failed"===e.status){const s=t[t.length-1];s&&s.includes("Test execution failed!")||(t.push("","❌ Test execution failed!",""),e.error&&t.push(`🔥 Error: ${e.error}`),t.push("Partial Results:"),t.push(`  ✅ Passed: ${e.results.passed}`),t.push(`  ❌ Failed: ${e.results.failed}`),t.push(`  ⏳ Pending: ${e.results.pending}`))}return{...s,output:t,status:["completed","failed","cancelled"].includes(e.status)?"completed":s.status}}return s})),["completed","failed","cancelled"].includes(e.status)&&N(e=>e.filter(e=>e.id!==t.id))}catch(e){b(s=>s.map(s=>{if(s.testRunId===t.id){const t=[...s.output],a=`⚠️ Polling error: ${e.message}`,n=t[t.length-1];return n&&n.includes("Polling error:")||(t.push(a),t.push("🔄 Will retry in 3 seconds...")),{...s,output:t}}return s}))}},3e3);return()=>{clearInterval(e)}}y.length},[y,$]);const C=e=>{if("TEST_RUN_UPDATE"===e.type){const{testRunId:t,status:s,progress:a,results:n}=e;N(e=>{const r=e.findIndex(e=>e.id===t),i={id:t,status:s,progress:a||{completed:0,total:0},results:n};if(r>=0){const t=[...e];return t[r]=i,t}return[...e,i]}),b(e=>e.map(e=>{if(e.testRunId===t){const t=[...e.output];return a&&t.push(`Progress: ${a.completed}/${a.total} tests completed`),n&&"completed"===s&&(t.push("","Test execution completed!","","Results:"),t.push(`  Total: ${n.passed+n.failed+n.pending}`),t.push(`  ✅ Passed: ${n.passed}`),t.push(`  ❌ Failed: ${n.failed}`),t.push(`  ⏳ Pending: ${n.pending}`),t.push(`  ⏳ Duration: ${(n.duration/1e3).toFixed(1)}s`)),{...e,output:t,status:"completed"===s||"failed"===s?"completed":e.status}}return e})),"completed"!==s&&"failed"!==s&&"cancelled"!==s||N(e=>e.filter(e=>e.id!==t))}};t.useEffect(()=>{S.current&&(S.current.scrollTop=S.current.scrollHeight)},[m]);const I=async(e,t)=>{const s=(t,s)=>{b(a=>a.map(a=>a.id===e?{...a,output:[...a.output,...t],status:s||a.status}:a))},n=t.split(" "),r=n[1];switch(r){case"help":s(["🚀 Labnex CLI - AI-Powered Testing Automation","","Available Commands:","  labnex run --project <id>            Run tests for a project","  labnex lint-tests <dir>              Static-analysis & lint your tests","  labnex create-test-case --file <f>   Import raw steps as a test case","  labnex generate test <desc>          Generate test case with AI","  labnex analyze failure <id>          Analyze test failure","  labnex optimize --project <id>       Optimize test suite","  labnex status                 Show active test runs","  labnex projects              List your projects","  labnex health                Check backend connection","  clear                         Clear terminal","  help                          Show this help message","","Options:","  --env <environment>           Set environment (staging, prod)","  --parallel <number>           Set parallel execution count","  --base-url <url>              Provide base URL for relative links","  --username <user>             Supply login username","  --password <pass>             Supply login password","  --ai-optimize                 Use AI optimization","  --detailed                    Show detailed action logs and performance metrics",""],"completed");break;case"projects":if(s(["🤖 Loading your projects..."]),P&&P.length>0){s(["","Your Projects:",...P.map(e=>`  ✅ ${e.name} (${e.projectCode}) - ID: ${e._id}`),""],"completed")}else s(["","No projects found. Create a project first.",""],"completed");break;case"status":s(["🤖 Checking status..."]);s(y.length>0?["🤖 Active Test Runs:",...y.map(e=>`  ✅ ${e.id}: ${e.status} (${e.progress.completed}/${e.progress.total})`),"","🤖 Debug Info:","  WebSocket Connected: "+($?"Yes":"No"),"  Polling Active: "+(y.length>0&&!$?"Yes":"No"),`  Active Runs Count: ${y.length}`]:["✅ No active test runs","","🤖 Debug Info:","  WebSocket Connected: "+($?"Yes":"No"),"  Polling Active: No (no active runs)","  Active Runs Count: 0"],"completed");break;case"health":s(["🤖 Check backend health..."]);try{s(["","✅ Backend is healthy!",`🤖 Status: ${(await a.get("/health")).status}`,`🤖 API Base: ${a.defaults.baseURL}`,"🤖 Connection: "+($?"WebSocket connected":"Using polling fallback"),""],"completed")}catch(i){s(["","❌ Backend health check failed",`🤖 Error: ${i.message}`,`🤖 API Base: ${a.defaults.baseURL}`,""],"error")}break;case"run":await z(e,n,s);break;case"generate":await R(e,n,s);break;case"analyze":await A(e,n,s);break;case"optimize":await E(e,n,s);break;case"debug":await L(e,n,s);break;default:s([`❌ Unknown command: ${r}`,'Type "labnex help" for available commands.'],"error")}},z=async(e,t,a)=>{const n=t.indexOf("--project")+1,r=t.indexOf("--env")+1,i=t.indexOf("--parallel")+1,l=t.includes("--ai-optimize"),o=t.includes("--detailed");if(!n||!t[n])return void a(["❌ Error: --project <id> is required"],"error");const d=t[n],m=r?t[r]:"staging",c=i?parseInt(t[i]):4;a(["🚀 Initializing test run...",`📝 Project ID: ${d}`,`🌍 Environment: ${m}`,`⚡ Parallel workers: ${c}`,"🖱 AI Optimization: "+(l?"enabled":"disabled"),...o?["🔍 Detailed logging: enabled"]:[],"","Connecting to Labnex API..."]);try{const t=await u(d,{environment:m,parallel:c,aiOptimization:l,useCloudRunner:!0}),n=$?"Real-time updates via WebSocket":o?"Enhanced polling every 2 seconds":"Polling for updates every 3 seconds";a(["✅ Test run created successfully!",`🆔 Test Run ID: ${t._id}`,`🔗 Update method: ${n}`,...o?["⏳ Starting detailed test execution monitoring...",""]:["⏳ Starting test execution...",$?"Real-time updates will appear below:":"Updates will appear below (polling every 3s):"]]),b(s=>s.map(s=>s.id===e?{...s,testRunId:t._id,detailed:o}:s)),N(e=>[...e,{id:t._id,status:"pending",progress:{completed:0,total:0},detailed:o}]),o&&(setTimeout(()=>{a(["🧠 AI Analysis Phase:","   • Analyzing test suite and optimizing execution order","   • Code changes detected: Reviewing project files","   • Estimated completion time: 2-3 minutes",""])},1e3),setTimeout(()=>{a(["🌐 Browser Environment Setup:","   • Launching Chrome browser in headless mode","   • Window size: 1920x1080","   • User agent: Labnex-Bot/1.0",""])},2500)),$||s("Using polling for updates (WebSocket unavailable)",{icon:"ℹ️",duration:3e3})}catch(p){a(["",`❌ Failed to create test run: ${p.message}`,"Please check the project ID and try again."],"error")}},R=async(e,t,s)=>{const a=t.indexOf("test")+1;if(!a||!t[a])return void s(["❌ Error: Please provide a test description"],"error");const n=t.slice(a).join(" ").replace(/"/g,"");s(["🤖 Generating test case with AI...",`📝 Description: "${n}"`,"","Analyzing requirements..."]);try{const e=await x({description:n});s(["✅ Test case generated successfully!","","📝 Generated Test Case:",`  ✅ Title: ${e.title}`,"  📝 Steps:",...e.steps.map((e,t)=>`     ${t+1}. ${e}`),`  ✅ Expected Result: ${e.expectedResult}`,"","🤖 You can now add this test case to your project!"],"completed")}catch(r){s(["",`❌ Failed to generate test case: ${r.message}`,"Please try again with a different description."],"error")}},A=async(e,t,s)=>{const a=t.indexOf("--run-id")+1;if(!a||!t[a])return void s(["❌ Error: --run-id <id> is required"],"error");const n=t[a];s(["📝 Analyzing test failure...",`📝 Test Run ID: ${n}`,"","Fetching failure details..."]);try{const e=await g({testRunId:n,failureId:n});s(["✅ Failure analysis completed!","","📝 Analysis Results:",`  📝 Analysis: ${e.analysis}`,"  🤖 Suggestions:",...e.suggestions.map(e=>`    ✅ ${e}`),"",`  📝 Test Case: ${e.testCase.title}`],"completed")}catch(r){s(["",`❌ Failed to analyze failure: ${r.message}`,"Please check the test run ID and try again."],"error")}},E=async(e,t,s)=>{const a=t.indexOf("--project")+1;if(!a||!t[a])return void s(["❌ Error: --project <id> is required"],"error");const n=t[a];s(["🤖 Optimizing test suite...",`📝 Project ID: ${n}`,"","Analyzing test performance..."]);try{const e=await h(n,{});s(["✅ Test suite optimization completed!","","📝 Optimization Results:",`  📝 Selected Tests: ${e.selectedCount}/${e.totalTests}`,`  ⏳ Optimization Time: ${e.optimizationTime}ms`,`  🤖 Reasoning: ${e.reasoning}`,"","🤖 Optimizations have been applied to your project!"],"completed")}catch(r){s(["",`❌ Failed to optimize test suite: ${r.message}`,"Please check the project ID and try again."],"error")}},L=async(e,t,s)=>{if("testrun"===t[2]&&t[3]){const e=t[3];s(["📝 Debug: Fetching test run details...",`📝 Test Run ID: ${e}`,""]);try{const t=await p(e);s(["✅ Test run found!","","📝 Test Run Details:",`  📝 Status: ${t.status}`,`  📝 Total Tests: ${t.results.total}`,`  ✅ Passed: ${t.results.passed}`,`  ❌ Failed: ${t.results.failed}`,`  ⏳ Pending: ${t.results.pending}`,`  ⏳ Duration: ${t.results.duration}ms`,`  ⏳ Started: ${new Date(t.startedAt).toLocaleString()}`,t.completedAt?`  ✅ Completed: ${new Date(t.completedAt).toLocaleString()}`:"  ⏳ Still running...",t.error?`  🔥 Error: ${t.error}`:"","","🤖 Config:",`  📝 Environment: ${t.config.environment}`,`  ⚡ Parallel Workers: ${t.config.parallel}`,"  🤖 AI Optimization: "+(t.config.aiOptimization?"Enabled":"Disabled"),`  ⏳ Timeout: ${t.config.timeout}ms`],"completed")}catch(a){s(["❌ Failed to fetch test run",`Error: ${a.message}`],"error")}}else s(["🤖 Debug Commands:","  labnex debug testrun <test-run-id>   Get detailed test run info","","Example:","  labnex debug testrun 68311c3aabee7e550082c970"],"completed")},F=[{label:"Run All Tests",command:P&&P.length>0?`labnex run --project ${P[0]._id} --ai-optimize`:"labnex run --project <project-id> --ai-optimize"},{label:"Lint Tests",command:"labnex lint-tests ./tests"},{label:"Generate Test",command:'labnex generate test "'},{label:"Create Test Case",command:"labnex create-test-case --file steps.txt"},{label:"Check Status",command:"labnex status"},{label:"List Projects",command:"labnex projects"}];return e.jsxs("div",{className:"min-h-screen p-3 sm:p-6 bg-[var(--lnx-bg)] dark:bg-gradient-to-br dark:from-gray-900 dark:via-gray-800 dark:to-gray-900",children:[e.jsxs("div",{className:"max-w-7xl mx-auto",children:[e.jsxs("div",{className:"mb-4 sm:mb-8",children:[e.jsxs("div",{className:"flex items-center gap-2 sm:gap-3 mb-3 sm:mb-4",children:[e.jsx("div",{className:"p-2 sm:p-3 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg sm:rounded-xl shadow-lg",children:e.jsx(r,{className:"h-6 w-6 sm:h-8 sm:w-8 text-white"})}),e.jsxs("div",{className:"flex-1 min-w-0",children:[e.jsx("h1",{className:"text-xl sm:text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent truncate",children:"Labnex CLI Terminal"}),e.jsx("p",{className:"text-gray-400 mt-0.5 sm:mt-1 text-sm sm:text-base hidden sm:block",children:"AI-Powered Testing Automation Command Line Interface"}),e.jsx("p",{className:"text-gray-400 mt-0.5 text-xs sm:hidden",children:"AI-Powered CLI"})]}),$&&e.jsxs("div",{className:"flex items-center gap-1.5 sm:gap-2 text-green-400",children:[e.jsx("div",{className:"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-400 rounded-full animate-pulse"}),e.jsx("span",{className:"text-xs sm:text-sm",children:"Connected"})]})]}),e.jsx("div",{className:"bg-gradient-to-r from-blue-600/20 to-purple-600/20 border border-blue-500/30 rounded-lg sm:rounded-xl p-3 sm:p-6 mb-3 sm:mb-6",children:e.jsxs("div",{className:"flex items-start gap-2 sm:gap-4",children:[e.jsx("div",{className:"p-1.5 sm:p-2 bg-blue-500 rounded-md sm:rounded-lg flex-shrink-0",children:e.jsx(r,{className:"h-4 w-4 sm:h-6 sm:w-6 text-white"})}),e.jsxs("div",{className:"flex-1 min-w-0",children:[e.jsx("h3",{className:"text-base sm:text-xl font-semibold text-blue-400 mb-1 sm:mb-2",children:"🚀 Get Full Performance with Local CLI"}),e.jsxs("p",{className:"text-gray-300 mb-2 sm:mb-4 text-sm sm:text-base",children:[e.jsx("span",{className:"text-green-400 font-semibold",children:"✅ Now Published!"})," Install our local CLI package:"]}),e.jsx("div",{className:"bg-gray-900/60 rounded-md sm:rounded-lg p-2 sm:p-4 mb-2 sm:mb-4 overflow-x-auto",children:e.jsx("code",{className:"text-green-400 font-mono text-xs sm:text-sm whitespace-nowrap",children:"npm install -g @labnex/cli"})}),e.jsxs("div",{className:"sm:block",children:[e.jsx("p",{className:"text-gray-400 text-xs sm:text-sm mb-2 sm:mb-3",children:"Then run the same commands locally:"}),e.jsx("div",{className:"bg-gray-900/60 rounded-md sm:rounded-lg p-2 sm:p-3 mb-2 sm:mb-0 overflow-x-auto",children:e.jsx("code",{className:"text-blue-400 font-mono text-xs sm:text-sm whitespace-nowrap block",children:"labnex run --project YOUR_PROJECT_ID"})})]}),e.jsxs("div",{className:"flex flex-wrap items-center gap-2 sm:gap-4 mt-2 sm:mt-4 text-xs sm:text-sm",children:[e.jsx("span",{className:"text-green-400",children:"✅ Unlimited Memory"}),e.jsx("span",{className:"text-green-400",children:"✅ Real Browsers"}),e.jsx("span",{className:"text-green-400 hidden sm:inline",children:"✅ Full CPU Power"}),e.jsx("span",{className:"text-green-400 hidden sm:inline",children:"✅ Faster Execution"})]}),e.jsx("div",{className:"mt-2 sm:mt-3 text-xs sm:text-sm",children:e.jsx("a",{href:"https://www.npmjs.com/package/@labnex/cli",target:"_blank",rel:"noopener noreferrer",className:"text-blue-400 hover:text-blue-300 underline",children:"📦 View on npm →"})})]})]})}),e.jsx("div",{className:"bg-blue-600/20 border border-blue-500/30 rounded-lg sm:rounded-xl p-3 sm:p-4 mb-3 sm:mb-6",children:e.jsxs("div",{className:"flex items-start gap-2 sm:gap-3",children:[e.jsx("span",{className:"text-blue-400 text-lg sm:text-xl flex-shrink-0",children:"🌐"}),e.jsxs("div",{className:"flex-1 min-w-0",children:[e.jsx("p",{className:"text-blue-200 font-medium text-sm sm:text-base",children:"Web CLI - Powered by Labnex Cloud"}),e.jsx("p",{className:"text-blue-300/80 text-xs sm:text-sm mt-1",children:"Execute tests in this browser terminal — they run on our cloud infrastructure with live results."})]})]})}),e.jsx("div",{className:"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-4 mb-4 sm:mb-6",children:F.map((t,s)=>e.jsxs("button",{onClick:()=>j(t.command),className:"p-2.5 sm:p-3 bg-gray-800/60 backdrop-blur-sm border border-gray-700/50 rounded-lg\n                         hover:bg-gray-700/60 hover:border-blue-500/50 active:bg-gray-700/70 active:scale-95 \n                         transition-all duration-200 text-left group touch-manipulation",disabled:w,children:[e.jsx("div",{className:"text-sm font-medium text-blue-400 group-hover:text-blue-300",children:t.label}),e.jsx("div",{className:"text-xs text-gray-500 mt-1 font-mono truncate",children:t.command.length>(window.innerWidth<640?20:25)?t.command.substring(0,window.innerWidth<640?20:25)+"...":t.command})]},s))})]}),e.jsxs("div",{className:"bg-gray-900/80 backdrop-blur-sm border border-gray-700/50 rounded-xl sm:rounded-2xl shadow-2xl overflow-hidden",children:[e.jsx("div",{className:"bg-gray-800/60 border-b border-gray-700/50 px-3 sm:px-6 py-2.5 sm:py-4",children:e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{className:"flex items-center gap-2 sm:gap-4 min-w-0",children:[e.jsxs("div",{className:"flex gap-1.5 sm:gap-2",children:[e.jsx("div",{className:"w-2.5 h-2.5 sm:w-3 sm:h-3 bg-red-500 rounded-full"}),e.jsx("div",{className:"w-2.5 h-2.5 sm:w-3 sm:h-3 bg-yellow-500 rounded-full"}),e.jsx("div",{className:"w-2.5 h-2.5 sm:w-3 sm:h-3 bg-green-500 rounded-full"})]}),e.jsxs("div",{className:"text-xs sm:text-sm text-gray-400 font-mono truncate",children:[o?.name,"@labnex-cli"]})]}),e.jsxs("div",{className:"flex items-center gap-2 sm:gap-4",children:[y.length>0&&e.jsxs("div",{className:"flex items-center gap-1.5 sm:gap-2 text-green-400",children:[e.jsx(l,{className:"h-3 w-3 sm:h-4 sm:w-4 animate-spin"}),e.jsxs("span",{className:"text-xs",children:[y.length," test run(s)"]})]}),e.jsx("button",{onClick:()=>b([]),className:"text-gray-400 hover:text-white active:text-gray-300 transition-colors text-xs sm:text-sm touch-manipulation",title:"Clear terminal",children:"Clear"})]})]})}),e.jsxs("div",{ref:S,className:"h-[60vh] sm:h-[50vh] md:h-96 overflow-x-auto overflow-y-auto p-3 sm:p-6 font-mono text-xs sm:text-sm",style:{WebkitOverflowScrolling:"touch"},children:[0===m.length&&e.jsxs("div",{className:"text-gray-500",children:[e.jsx("div",{children:"🤖 Welcome to Labnex CLI Terminal"}),e.jsx("div",{className:"hidden sm:block",children:'Type "labnex help" for available commands'}),e.jsx("div",{className:"hidden sm:block",children:'Type "labnex projects" to see your projects'}),e.jsx("div",{className:"sm:hidden",children:'Type "labnex help" for commands'}),e.jsx("div",{className:"mt-2 text-blue-400",children:"Ready for commands..."})]}),m.map(t=>e.jsxs("div",{className:"mb-3 sm:mb-4",children:[e.jsxs("div",{className:"flex items-start gap-1.5 sm:gap-2 mb-1 sm:mb-2",children:[e.jsx("span",{className:"text-blue-400 flex-shrink-0",children:"$"}),e.jsx("span",{className:"text-white break-all sm:break-normal",children:t.command}),"running"===t.status&&e.jsx(l,{className:"h-3 w-3 sm:h-4 sm:w-4 text-yellow-400 animate-spin ml-1 sm:ml-2 flex-shrink-0"}),"completed"===t.status&&e.jsx("span",{className:"text-green-400 ml-1 sm:ml-2 flex-shrink-0",children:"✅"}),"error"===t.status&&e.jsx("span",{className:"text-red-400 ml-1 sm:ml-2 flex-shrink-0",children:"❌"})]}),t.output.map((t,s)=>e.jsx("div",{className:"ml-3 sm:ml-4 break-all sm:break-normal "+(t.startsWith("❌")||t.startsWith("Error:")?"text-red-400":t.startsWith("✅")||t.startsWith("🤖")||t.startsWith("📝")?"text-green-400":t.startsWith("⏳")||t.startsWith("🤖")||t.startsWith("🌍")?"text-blue-400":t.startsWith("🔍")||t.startsWith("🖱")?"text-yellow-400":"text-gray-300"),children:t},s))]},t.id)),e.jsxs("div",{className:"flex items-center gap-1.5 sm:gap-2 mt-3 sm:mt-4",children:[e.jsx("span",{className:"text-blue-400 flex-shrink-0",children:"$"}),e.jsx("input",{ref:T,type:"text",value:f,onChange:e=>j(e.target.value),onKeyPress:e=>{"Enter"!==e.key||w||(async e=>{if(!e.trim())return;const t=Math.random().toString(36).substr(2,9),a={id:t,command:e,output:[],status:"running",timestamp:new Date};b(e=>[...e,a]),v(!0),j("");try{if("clear"===e.trim())return b([]),void v(!1);await I(t,e.trim())}catch(n){b(e=>e.map(e=>e.id===t?{...e,output:[...e.output,"",`❌ Error: ${n.message||"Command execution failed"}`,"Please check your command syntax and try again."],status:"error"}:e)),s.error("Command execution failed")}v(!1)})(f)},className:"flex-1 bg-transparent text-white border-none outline-none font-mono text-xs sm:text-sm min-w-0",placeholder:w?"Running...":"Enter command...",disabled:w,autoFocus:!0,style:{fontSize:"16px"}}),w?e.jsx(c,{className:"h-4 w-4 sm:h-5 sm:w-5 text-red-400 flex-shrink-0"}):e.jsx(d,{className:"h-4 w-4 sm:h-5 sm:w-5 text-green-400 flex-shrink-0"})]})]}),f&&!w&&e.jsxs("div",{className:"border-t border-gray-700/50 bg-gray-800/40 p-3 sm:p-4",children:[e.jsx("div",{className:"text-xs text-gray-400 mb-2",children:"Suggestions:"}),e.jsx("div",{className:"grid grid-cols-1 gap-1",children:["labnex run --project <project-id>","labnex run --project <project-id> --env staging","labnex run --project <project-id> --parallel 8","labnex run --project <project-id> --ai-optimize","labnex run --project <project-id> --base-url https://example.com","labnex lint-tests ./tests","labnex create-test-case --project <project-id> --file steps.txt",'labnex generate test "Test description"',"labnex analyze failure --run-id <run-id>","labnex optimize --project <project-id>","labnex debug testrun <test-run-id>","labnex status","labnex projects","labnex health","labnex help","clear"].filter(e=>e.toLowerCase().includes(f.toLowerCase())).slice(0,3).map((t,s)=>e.jsx("button",{onClick:()=>j(t),className:"text-left text-xs text-gray-300 hover:text-blue-400 active:text-blue-500\n                               py-1.5 sm:py-1 px-2 rounded hover:bg-gray-700/50 active:bg-gray-700/70 \n                               transition-colors font-mono touch-manipulation break-all sm:break-normal",children:t},s))})]})]}),e.jsxs("div",{className:"mt-4 sm:mt-8 grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6",children:[e.jsxs("div",{className:"bg-gray-800/60 backdrop-blur-sm border border-gray-700/50 rounded-lg sm:rounded-xl p-4 sm:p-6",children:[e.jsx("h3",{className:"text-base sm:text-lg font-semibold text-white mb-3 sm:mb-4",children:"Common Commands"}),e.jsx("div",{className:"space-y-2 sm:space-y-3",children:[{cmd:"labnex run --project <id>",desc:"Run all tests for a project"},{cmd:"labnex generate test",desc:"Generate test case with AI"},{cmd:"labnex analyze failure",desc:"Analyze test failure"},{cmd:"labnex optimize",desc:"Optimize test suite"}].map((t,s)=>e.jsxs("div",{className:"border-b border-gray-700/30 pb-2",children:[e.jsx("div",{className:"font-mono text-blue-400 text-xs sm:text-sm break-all sm:break-normal",children:t.cmd}),e.jsx("div",{className:"text-gray-400 text-xs mt-1",children:t.desc})]},s))})]}),e.jsxs("div",{className:"bg-gray-800/60 backdrop-blur-sm border border-gray-700/50 rounded-lg sm:rounded-xl p-4 sm:p-6",children:[e.jsx("h3",{className:"text-base sm:text-lg font-semibold text-white mb-3 sm:mb-4",children:"CLI Features"}),e.jsxs("div",{className:"space-y-2 sm:space-y-3 text-xs sm:text-sm text-gray-300",children:[e.jsxs("div",{className:"flex items-start gap-2 sm:gap-3",children:[e.jsx("div",{className:"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-400 rounded-full mt-1.5 sm:mt-2 flex-shrink-0"}),e.jsxs("div",{className:"min-w-0",children:[e.jsx("div",{className:"font-medium text-white",children:"Real-time Test Execution"}),e.jsx("div",{className:"text-gray-400",children:"Stream test results via WebSocket"})]})]}),e.jsxs("div",{className:"flex items-start gap-2 sm:gap-3",children:[e.jsx("div",{className:"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-blue-400 rounded-full mt-1.5 sm:mt-2 flex-shrink-0"}),e.jsxs("div",{className:"min-w-0",children:[e.jsx("div",{className:"font-medium text-white",children:"AI-Powered Features"}),e.jsx("div",{className:"text-gray-400",children:"Test generation, failure analysis, optimization"})]})]}),e.jsxs("div",{className:"flex items-start gap-2 sm:gap-3",children:[e.jsx("div",{className:"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-purple-400 rounded-full mt-1.5 sm:mt-2 flex-shrink-0"}),e.jsxs("div",{className:"min-w-0",children:[e.jsx("div",{className:"font-medium text-white",children:"Project Integration"}),e.jsx("div",{className:"text-gray-400",children:"Works with your actual Labnex projects"})]})]})]})]})]})]}),e.jsx("style",{children:"\n        /* Mobile viewport optimizations */\n        @media (max-width: 640px) {\n          /* Prevent zoom on input focus for iOS */\n          input {\n            font-size: 16px !important;\n          }\n          \n          /* Better touch scrolling */\n          .overflow-y-auto {\n            -webkit-overflow-scrolling: touch;\n            overflow-scrolling: touch;\n          }\n          \n          /* Remove iOS input styling */\n          input {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n          }\n          \n          /* Better touch targets */\n          button {\n            min-height: 44px;\n            min-width: 44px;\n          }\n        }\n\n        /* Extra small screens */\n        @media (max-width: 380px) {\n          .p-3 {\n            padding: 12px !important;\n          }\n          \n          .gap-2 {\n            gap: 6px !important;\n          }\n        }\n\n        /* Mobile touch improvements */\n        @media (hover: none) and (pointer: coarse) {\n          button:hover {\n            background-color: inherit !important;\n            transform: none !important;\n          }\n          \n          button:active {\n            transform: scale(0.95) !important;\n            transition: transform 0.1s ease-in-out !important;\n          }\n        }\n\n        /* Landscape phone optimizations */\n        @media (max-width: 896px) and (orientation: landscape) {\n          .h-[60vh] {\n            height: 40vh !important;\n          }\n        }\n\n        /* Prevent horizontal scroll */\n        @media (max-width: 640px) {\n          body {\n            overflow-x: hidden;\n          }\n          \n          * {\n            max-width: 100%;\n            box-sizing: border-box;\n          }\n        }\n\n        /* Focus improvements for accessibility */\n        button:focus-visible, \n        input:focus-visible {\n          outline: 2px solid rgb(59 130 246);\n          outline-offset: 2px;\n        }\n      "})]})}export{b as TerminalPage};
